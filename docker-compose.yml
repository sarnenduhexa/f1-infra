services:
  postgres:
    image: postgres:16-alpine
    container_name: f1_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: f1_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - f1-network

  backend:
    image: sarnenduhexa/f1-be:latest
    container_name: f1-be
    ports:
      - "3001:3000"
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: f1_db
      CORS_ORIGINS: http://localhost:5173,http://localhost:5174
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - f1-network
  frontend:
    image: sarnenduhexa/f1-fe:latest
    container_name: f1-fe
    ports:
      - "5174:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - f1-network

networks:
  f1-network:
    name: f1-network

volumes:
  postgres_data:
    name: f1_postgres_data 